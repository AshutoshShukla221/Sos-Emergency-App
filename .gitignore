import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: LoginPage(),
    debugShowCheckedModeBanner: false,
  ));
}

class LoginPage extends StatefulWidget {
  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _userIdController = TextEditingController();
  final TextEditingController _emergencyContactController = TextEditingController();

  List<String> permissions = [
    'Location',
    'Microphone Access',
    'Camera Access',
    'Contacts'
  ];
  List<String> selectedPermissions = [];

  List<String> emergencyContacts = [];

  String? locationPermissionError;

  void _addEmergencyContact() {
    if (_emergencyContactController.text.isNotEmpty) {
      setState(() {
        emergencyContacts.add(_emergencyContactController.text);
        _emergencyContactController.clear();
      });
    }
  }

  void _togglePermission(String permission) {
    setState(() {
      if (selectedPermissions.contains(permission)) {
        selectedPermissions.remove(permission);
      } else {
        selectedPermissions.add(permission);
      }

      // Clear error if Location gets selected
      if (permission == 'Location' && selectedPermissions.contains('Location')) {
        locationPermissionError = null;
      }
    });
  }

  void _signIn() {
    if (!selectedPermissions.contains('Location')) {
      setState(() {
        locationPermissionError = 'Location permission is required';
      });
      return;
    }

    setState(() {
      locationPermissionError = null;
    });

    // Navigate to Success Screen
    Navigator.push(
      context,
      MaterialPageRoute(builder: (context) => SuccessScreen()),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Login Page'),
        backgroundColor: Colors.red.shade200,
      ),
      body: SingleChildScrollView(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [

            TextField(
              controller: _usernameController,
              decoration: InputDecoration(labelText: 'Username'),
            ),

            SizedBox(height: 12),

            TextField(
              controller: _userIdController,
              decoration: InputDecoration(labelText: 'User ID'),
              keyboardType: TextInputType.number,
            ),

            SizedBox(height: 24),

            Text(
              'Allowed Permissions',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),

            ...permissions.map((perm) {
              return CheckboxListTile(
                title: Text(perm),
                value: selectedPermissions.contains(perm),
                onChanged: (bool? value) {
                  _togglePermission(perm);
                },
              );
            }).toList(),

            if (locationPermissionError != null)
              Padding(
                padding: const EdgeInsets.only(left: 16.0, bottom: 8),
                child: Text(
                  locationPermissionError!,
                  style: TextStyle(color: Colors.red, fontSize: 14),
                ),
              ),

            SizedBox(height: 24),

            Text(
              'Emergency Contacts',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),

            Row(
              children: [
                Expanded(
                  child: TextField(
                    controller: _emergencyContactController,
                    decoration: InputDecoration(
                      hintText: 'Enter contact number',
                    ),
                    keyboardType: TextInputType.phone,
                  ),
                ),
                IconButton(
                  icon: Icon(Icons.add),
                  onPressed: _addEmergencyContact,
                ),
              ],
            ),

            ...emergencyContacts.map((contact) => ListTile(
              title: Text(contact),
              trailing: IconButton(
                icon: Icon(Icons.delete),
                onPressed: () {
                  setState(() {
                    emergencyContacts.remove(contact);
                  });
                },
              ),
            )),

            SizedBox(height: 32),

            Center(
              child: ElevatedButton(
                onPressed: _signIn,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.red.shade200,
                  padding: EdgeInsets.symmetric(horizontal: 40, vertical: 12),
                ),
                child: Text(
                  'Sign In',
                  style: TextStyle(fontSize: 16, color: Colors.white),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// Success Screen Widget
class SuccessScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(32.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Icon(
                Icons.check_circle_rounded,
                color: Colors.green,
                size: 150,
              ),
              SizedBox(height: 30),
              Text(
                'You are good to go.\nWe ensure to safeguard you and your loved ones.',
                textAlign: TextAlign.center,
                style: TextStyle(
                  fontSize: 24,
                  color: Colors.blue.shade800,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
